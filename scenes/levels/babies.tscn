[gd_scene load_steps=25 format=4 uid="uid://c2bdn7ivam1cq"]

[ext_resource type="PackedScene" uid="uid://tdgkmflrwhol" path="res://scenes/level.tscn" id="1_t0qa0"]
[ext_resource type="PackedScene" uid="uid://w24n725ra66v" path="res://scenes/bottle.tscn" id="2_t0qa0"]
[ext_resource type="PackedScene" uid="uid://bopakv60mdjtv" path="res://meshes/cot.glb" id="3_jjwbj"]
[ext_resource type="PackedScene" uid="uid://c7yuk8ev1nel7" path="res://meshes/music-box.glb" id="4_4bgyd"]
[ext_resource type="PackedScene" uid="uid://befgfai7xh21g" path="res://scenes/door.tscn" id="4_id7lw"]
[ext_resource type="Texture2D" uid="uid://bm0vgngwmgft8" path="res://images/textures/calibrate_instruction.png" id="4_nnyux"]
[ext_resource type="PackedScene" uid="uid://d0y0b0ibmt0f1" path="res://scenes/baby.tscn" id="4_t0qa0"]
[ext_resource type="AudioStream" uid="uid://ckughd8cxa5v3" path="res://sounds/lullaby.ogg" id="5_id7lw"]
[ext_resource type="AudioStream" uid="uid://bdflkwgbd3bem" path="res://sounds/baby-cry1-2.wav" id="8_hqard"]
[ext_resource type="AudioStream" uid="uid://u17kopneiqrk" path="res://sounds/baby-cry1-3.wav" id="9_xph1r"]
[ext_resource type="AudioStream" uid="uid://c4h6ju4mdki32" path="res://sounds/baby-cry1-4.wav" id="10_37ht0"]
[ext_resource type="AudioStream" uid="uid://bw3wy81dxjb81" path="res://sounds/baby-cry1-5.wav" id="11_fd5wo"]
[ext_resource type="AudioStream" uid="uid://lnvkt7sig14v" path="res://sounds/baby-cry1-6.wav" id="12_dp1ol"]
[ext_resource type="AudioStream" uid="uid://bekleebodx3wv" path="res://sounds/baby-cry2-1.wav" id="13_1hcgq"]
[ext_resource type="AudioStream" uid="uid://jndt1s7xomp" path="res://sounds/baby-cry2-2.wav" id="14_3n1r2"]
[ext_resource type="AudioStream" uid="uid://c345nk8eh2drb" path="res://sounds/baby-cry2-3.wav" id="15_kpbos"]
[ext_resource type="AudioStream" uid="uid://b1l10jbma87ae" path="res://sounds/baby-cry2-4.wav" id="16_6g7x3"]
[ext_resource type="AudioStream" uid="uid://dah5entgecscs" path="res://sounds/baby-cry2-5.wav" id="17_6a77l"]

[sub_resource type="ArrayMesh" id="ArrayMesh_y65rj"]
_surfaces = [{
"aabb": AABB(-0.5, -4.0287343e-19, -0.15000002, 1, 1, 0.30000004),
"format": 34896613377,
"index_count": 528,
"index_data": PackedByteArray("JwAoACkAKgApACgAKAAnABUAKQArACcAKAAaACoAKwApABQAJwArACwAKQAqAC0ALQAUACkAGgAoABcAFQAXACgAFwAuABoAFQAnAAkALAAJACcAFwAVAAIAAgAAABcALgAXAAAAAwAAAAIAAAADAC4AAwACAAgACAACABUACQAvABUAFQAvAAgABwAIAC8AAwAIAAcALgADAAYABwAGAAMABgAlAC4ABgAHACYAJgAlAAYALwAmAAcAJQAwAC4AMAAlACYAMAAaAC4ALwAxACYAJgAxADAALwAJADEAMAAyABoAMgAwADEAMgAqABoACQAzADEAMQAzADIACQAsADMAMgA0ACoANAAyADMALAAkADMAMwAkADQALAA1ACQANAAkADUANAA2ACoANQA2ADQANgAtACoALAA3ADUANwAsACsANgA1ADgANwA4ADUAOAAcADYANgAcAC0AOQAcADgAHAA5AC0AOAAjADkANwAjADgAOQAjADoAOgAjADsANwA7ACMAOgA8ADkAPAA6AD0APQA6ADsAPgA5ADwAOQA+AC0APQA/ADwAPgA8AD8AIQA/AD0AQAA/ACEAQAA+AD8APQAKACEACgA9AEEAPQA7AEEAQgAhAAoAQAAhAEIACgBDAEIAQwAKAEEAHQBAAEIARABCAEMAHQBCAEQAQwBBAA0ARQAdAEQAQwBGAEQARgBDAA0AIABEAEYARQBEACAARgAiACAARgANAEcAIgBGAEcAIAAiABIAEgAiAEcAEgATACAARQAgABMAEQATABIAEwARAEUARwAQABIAEQASABAADwARABAARQARAA8ADgAQAEcAEAAOAA8ADwAfAEUAHwAPAA4AHQBFAB8ARwAeAA4ADgAeAB8AHgBHAA0ADQBIAB4AHwAeAEgASAANAEEAHwBJAB0ASABJAB8AQAAdAEkAQQBKAEgASQBIAEoASgBBADsASQAbAEAASgAbAEkAPgBAABsAOwAMAEoAGwBKAAwAGwBLAD4ADABLABsATAA+AEsADAA7AE0APgBMAC0ANwBNADsATgBLAAwASwBOAEwADABPAE4ATQBPAAwABQBMAE4ATABQAC0AFAAtAFAATAAFABkATAAZAFAATgAEAAUABABOAE8ABQBRABkAUQAFAAQAUgBQABkAUABSABQAFgAZAFEAGQAWAFIABABTAFEAUQBTABYAUwAEAFQATwBUAAQAFgBTABgAVAAYAFMAUgAWAFUAGABVABYAVgAYAFQAVQAYAFYACwBUAE8AVAALAFYATwBNAAsAVwBWAAsAVgBXAFUAVwALAE0AVQABAFIAAQBVAFcAFABSAAEAWABXAE0AVwBYAAEANwBYAE0AAQBZABQAWQABAFgAWAA3AFkAFABZACsAKwBZADcA"),
"lods": [0.09455776, PackedByteArray("FAABABUAFQABAAkAFAAWAAEAFQAXABQAGAABABYAAQAYAAsACwAJAAEAFgAEABgAGQAWABQAGQAEABYAGgAUABcAFAAaABkADAAYAAQACwAYAAwAGQAFAAQADAAEABsAGwAEAAUAHAAFABkAHAAZABoABQAdABsAGwAeAAwADAANAAsADQAMAB4AHgAbAB8AHwAbAB0ADgAeAB8ADQAeAA4AHwAPAA4ADwAfAB0AEAAOAA8ADgAQAA0ADwARABAAHQARAA8ADQAQABIAEQASABAAEwARAB0AEQATABIAHQAgABMAEgATACAAHQAhACAAHQAFACEAIAAiABIAEgAiAA0AIAAhACIABQAcACEAIgAjAA0AIwAiACEAIwAhABwAIwALAA0ACwAjACQAHAAkACMACQALACQAHAAlACQAJQAcABoACQAkACYAJgAkACUAJgAlAAYABgAlABoACQAmAAcABgAHACYABwAIAAkAFQAJAAgABwAGAAMAGgADAAYAAwAIAAcAAAADABoAGgAXAAAAAwACAAgACAACABUAAwAAAAIAFwAVAAIAAgAAABcA"), 0.70410585, PackedByteArray("AAABAAIAAwAAAAIAAQAAAAQAAAADAAUABQAEAAAABgAFAAMABwAGAAMAAwACAAgAAwAIAAcAAgABAAkACQAIAAIACAAKAAcACAAJAAoABwAKAAYACwAJAAEACQALAAoACwABAAwADAABAAQADAANAAsACgALAA0ABAAOAAwADQAMAA4ADgAEAA8ADgAQAA0AEAAOAA8ACgANABAADwAEABEADwARABAABQARAAQAEgAKABAAEQASABAACgASABMAEQATABIAEQAFABMACgATAAYABQAGABMA")],
"name": "colormap",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 90,
"vertex_data": PackedByteArray("AAAAAKoqAAD/P9juVNUAAAAAAABU1QAAzAwAAAAAAAAgoaL7qioAAMidKu8AAAAAMjMAAAAAAAAyMwAA//8AAMwMAAD//wAA1BDInf//AAD9tf21//8AAMidKu///wAAgdqB2lTVAAAq78id//8AAP//AABU1QAA//8AAKoqAAAy8wAA//8AADLzAAAAAAAAzMwAAP//AADMzAAAAAAAAH0lgdqqKgAAAAD/f1TVAADeXqL7qioAAAAA/3+qKgAA/3///1TVAAA2YirvAAAAANQQyJ0AAAAA2O7/v6oqAAA8bMDJAAAAACrvyJ0AAAAA////f1TVAAD///9/qioAAMzMpHwAAAAA/bX9tQAAAADMzKR8//8AAP9/Wsz//wAAAUr9tf//AAAyM6R8AAAAADIzpHz//wAAXAQgoVTVAABcBCChqioAACYR/7+qKgAAVByKuQAAAAAmEf+/VNUAAFQcirn//wAAni5g0QAAAADMDCh/AAAAAMwMKH///wAAPjbCkwAAAAA+NsKT//8AAN49LaYAAAAA3j0tpv//AAABSv21AAAAANFZIML//wAA0VkgwgAAAACeLmDR//8AADxswMn//wAA/39azAAAAADCk8DJ//8AAGDRYNH//wAAwpPAyQAAAAAtpiDC//8AAGDRYNEAAAAALaYgwgAAAACq44q5AAAAAKrjirn//wAAIMItpgAAAAAgwi2m//8AAMDJwpMAAAAAMvMofwAAAADAycKT//8AADLzKH///wAAovsgoVTVAACi+yChqioAANju/79U1QAAgdqB2qoqAACKuarjAAAAAIq5quP//wAA/7/Y7qoqAAD/v9juVNUAAHRGquMAAAAA/38V8wAAAAD/P9juqioAAP9///+qKgAAIKGi+1TVAADeXqL7VNUAAP9/FfP//wAANmIq7///AAB0Rqrj//8AAH0lgdpU1QAA")
}]
blend_shape_mode = 0

[sub_resource type="ArrayMesh" id="ArrayMesh_t0qa0"]
resource_name = "door-rotate-large_door-rotate-large"
_surfaces = [{
"aabb": AABB(-0.5, -4.0287343e-19, -0.15000002, 1, 1, 0.30000004),
"attribute_data": PackedByteArray("/1eYuf9X04n/V5i5/1dFh/9X5Y3/V5i5/1eYuf9XmLn/VzKV/1eYuf9XmLn/V5i5/1eYuf9X04n/Vwqa/1eYuf9Xw4n/V+WN/1cKmv9XmLn/V5i5/1eYuf9Xw4n/V5i5/1eYuf9XmLn/V5i5/1dFh/9XmLn/V8OJ/1eYuf9XmLn/V5i5/1eYuf9XmLn/V5i5/1eYuf9XmLn/V5i5/1eYuf9XmLn/V5i5/1eYuf9XmLn/V5i5/1cylf9XmLn/Vwqa/1fDif9XCpr/V5i5/1eYuf9X5Y3/V/+f/1dFh/9X/5//V2WG/1cyk/9X/5//V/+f/1eroP9XMpX/V6ug/1c/kf9XuZD/VzKV/1eroP9Xq6D/V/+f/1dlhv9X/5//Vwqa/1eroP9XP5H/V8OJ/1cylf9XCpr/V6ug/1f/n/9XMpP/Vwqa/1fDif9XRYf/V+WN/1cKmv9X/5//V6ug/1e5kP9XMpX/V6ug/1dfmf9XX5n/VzKT/1cyk/9X04n/V0WH/1dlhv9XRYf/VzKT/1dfmf9XX5n/V+WN/1cyk/9XMpP/V0WH/1dlhv9XZYb/V0WH/1fTif9X5Y3/V+WN/1fTif9XX5n/V1+Z/1fTif9X04n/V+WN/1cyk/9XMpP/V+WN/1fljf9XRYf/V9OJ/1fTif9XRYf/V1+Z/1dfmf9XC5z/Vwuc/1c/kf9XuZD/V8WS/1fFkv9XP5H/Vz+R/1dcmP9XXJj/V8WS/1fFkv9XMpX/V32U/1dfmf9XMpP/VzKV/1dcmP9XXJj/VzKV/1eroP9Xq6D/V/qI/1fDif9XRYf/Vwqa/1cqoP9XX5n/Vyqg/1cLnP9XXJj/V32U/1cylf9XxZL/V7iP/1e5kP9XuI//Vz+R/1fFkv9XEIz/VxCM/1d9lP9X+oj/V1yY/1cLnP9XKqD/V8WS/1cylf9XMpX/V8WS/1dfmf9XfZT/VzKT/1e4j/9XEIz/V9OJ/1cqoP9XEIz/V7iP/1fljf9X04n/V7iP/1d9lP9XMpP/V+WN/1c/kf9XP5H/V8WS/1fFkv9XMpP/V32U/1e4j/9X5Y3/Vyqg/1dfmf9Xq6D/Vwuc/1cLnP9Xq6D/V1yY/1cLnP9XC5z/V1yY/1e4j/9XfZT/V+WN/1fTif9XEIz/V0WH/1f/n/9X/5//V8OJ/1cQjP9XRYf/Vyqg/1f/n/9X/5//Vyqg/1cqoP9X/5//Vyqg/1dfmf9XRYf/V8OJ/1f6iP9XZYb/V9OJ/1cQjP9XRYf/V8OJ/1f6iP9XZYb/V/+f/1cqoP9XCpr/V1+Z/1c/kf9XP5H/V7mQ/1e5kP9XEIz/V9OJ/1f/n/9X/5//VxCM/1e4j/9X5Y3/V9OJ/1e4j/9XEIz/V9OJ/1cLnP9XXJj/V1yY/1cLnP9XKqD/Vwuc/1dcmP9XfZT/V8WS/1e4j/9XP5H/V7iP/1c/kf9XEIz/V8WS/1cQjP9Xw4n/V/qI/1d9lP9XXJj/Vwuc/1cqoP9XfZT/Vwqa/1dfmf9XMpP/V/qI/1fDif9XRYf/V2WG/1dfmf9XCpr/V32U/1cyk/9XMpP/V32U/1e4j/9X5Y0="),
"format": 34896613399,
"index_count": 528,
"index_data": PackedByteArray("WgBbAFwAXABdAFoAXgA2AF8AXwABAF4AYAADAGEAYQA4AGAAYgA5AGMAYwBkAGIABABlAGYAZgBnAAQAaABpAGoAagBrAGgAbABtAG4AbgBvAGwANQA3AHAAcABxADUANAByAHMAcwB0ADQAdQB2AHcAdwB4AHUAeQB6AHsAewB8AHkAfQB+ADsAOwA6AH0AfwA+ADwAPACAAH8AgQBAAIIAggA/AIEAgwCEAIUAhQCGAIMAhwBBAAgACACIAIcAiQCKAIsAiwA9AIkAjAAOAI0AjQCOAIwAjwCQAJEAkQCSAI8ACwAKAEMAQwBCAAsAkwCUAAkACQAHAJMAlQCWAJcAlwBFAJUAmACZAEQARACaAJgAmwAXABUAFQBIAJsASACcAJsAnABHAJsAnACdAEcAnQCeAEcAnQCfAJ4AnwCgAJ4AoAChAJ4AoABJAKEASQCiAKEAogCjAKEAowCiAKQAowCkAKUAowCmAKEApgCnAKEAqACjAKUApgBKAKcApgAWAEoAFgCpAEoAqAClAEsAqABLAKoATACoAKoATACqAKsArABMAKsArACrAE0ArABNABgAGAAZAKwArQCuAK8ArwCwAK0AsQBUALIAsgCzALEAEQC0ALUAtQC2ABEAtwBGABMAEwAUALcAuAC5ALoAugC7ALgAvAC9AL4AvgC/ALwAwADBAMIAwgDDAMAAxADFAMYAxgDHAMQAUADIAE4ATgDJAFAAygDLAMwAzADNAMoAzgDPANAA0ADRAM4A0gDTAE8ATwDUANIA1QDWABAAEADXANUA2AAGAAUABQDZANgA2gDbAA0ADQDcANoA3QAcABoAGgDeAN0ADwAMAN8A3wDgAA8AHgAfAOEA4QBVAB4A4gDjABIAEgDkAOIA5QDmAOcA5wDoAOUA6QDqAFEAUQBSAOkA6wDsAO0A7QDuAOsA7wDwAPEA8QDyAO8A8wD0APUA9QD2APMAIAAhACIAIgAjACAAIgAkACMAIgAlACQAHQD3APgA+AAbAB0AAgAAAPkA+QD6AAIA+wD8AP0A/QD+APsAJgAnACgAKAApACYAKQAqACYAKQArACoAUwD/AAABAAEBAVMAAgEDAQQBBAEFAQIBBgEuACwALABWAAYBVgAHAQYBBwEvAAYBBwEIAS8ACAEJAS8ACAEtAAkBLQAKAQkBCgELAQkBCgEMAQsBDAFXAAsBDQELAVcADQFXAA4BDQEPAQsBDQEOARABDQERAQ8BEQESAQ8BEgEwAA8BEgETATAAFAENARABFAEQAVgAFAFYABUBMQAUARUBMQAVARYBFwExABYBFwEWAVkAFwFZADMAMwAyABcBGAEZARoBGgEbARgBHAEdAR4BHgEfARwBIAEhASIBIgEjASABJAElASYBJgEnASQB"),
"lods": [0.09455776, PackedByteArray("NAABADUANAA2AAEANQA3ADQANwA1AAIAAgAAADcAOAABADYANgADADgABAA4AAMABAADADkAOQA6AAQAOgA5ADsABQA6ADsAOwAGAAUAPAA9AD4APAA+AAkACQAHADwAPwA+AD0APwA9AEAAQABBAD8AQABCAEEAQwBBAEIAQwBCAAsACwAKAEMARAANAA4ARAAOAA8ADwAMAEQAEAAOAA0ADQBFABAAEABFABEAEQASABAAEgARAEYAEgBGABMAEwAUABIARwAXABUAFQBIAEcASABJAEcASQBKAEcASQAWAEoAFgBJAEsATAAWAEsATABLAE0ATABNABgAGAAZAEwATgBPAFAAGgBOAFAAUAAcABoAHQBQAE8ATwAbAB0AUQAdABsAUQAbAFIAUQBSAFMAUwBUAFEAVABTAFUAVABVAB4AHgAfAFQAIAAhACIAIgAjACAAIgAkACMAIgAlACQAJgAnACgAKAApACYAKQAqACYAKQArACoALwAuACwALABWAC8AVgBXAC8AVwAwAC8AMABXAFgAMQAwAFgAMQBYAFkAMQBZADMAMwAyADEA"), 0.70410585, PackedByteArray("AAABAAIAAQAAAAMABAABAAMAAwAFAAQABQADAAYABwAIAAkACAAKAAkACAALAAoADAANAA4ADgAPAAwAEAAOAA0AEAANABEAEQASABAAEgARABMAEwAUABIAFQAWABcAFgAVABgAGQAWABgAGgAbABwAHQAcABsAHQAbAB4AHgAfAB0AIAAhACIAIgAjACAAIgAkACMAIgAlACQAJgAnACgAKAApACYAKQAqACYAKQArACoALAAtAC4ALQAvAC4ALQAwAC8AMQAwAC0AMgAxAC0AMgAtADMA")],
"name": "colormap",
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 296,
"vertex_data": PackedByteArray("AAAAAKoq/7//P9juVNVKygAAAABU1f+/IKGi+6oqd8+B2oHaVNX8xf//AABU1f+///8AAKoq/78yMwAA////v/21/bX///zFMjMAAAAA/7/MzAAAAAD/v8zMAAD///+/AAAAAFTV/5//P9juVNUToNQQyJ3///GfzAwAAP///5/InSrv//+WoIHagdpU1UagKu/Inf//95///wAAVNX/nzLzAAD///+fMjMAAAAA///InSrvAAD//8wMAAAAAP//zMwAAAAA//8y8wAAAAD/////AACqKv/fIKGi+6oqUvUy8wAAAAD/38idKu8AAFL1AAAAAKoq/9/MDAAAAAD/3zIzAAD///+/MjMAAAAA/7/MDAAAAAD/v8wMAAD///+/AAAAAFTV/78AAAAAqir/vzLzAAD///+///8AAFTV/7///wAAqir/vzLzAAAAAP+/zMwAAP///7/MzAAAAAD/v8zMAAD//wCA/bX9tf//AIAy8wAA//8AgCrvyJ3//wCAyJ0q7///AIDUEMid//8AgMwMAAD//wCAMjMAAP//AIB9JYHaqir8xQAA/39U1QrA3l6i+6oqd88AAP9/qioKwP9///9U1VTV2O7/v6oqusL///9/VNUKwP///3+qKgrAMjOkfP//CsABSv21///8xTIzpHwAAArAPGzAyQAAd8//f1rM//9U1f21/bUAAPzFzMykfP//CsDMzKR8AAAKwAAA/39U1faf/3///1TVB6D///9/VNX2n9QQyJ0AAP//MjOkfAAA//88bMDJAAD//zZiKu8AAP///bX9tQAA//8q78idAAD//8zMpHwAAP//////f6oqF+DY7v+/qiqt4yrvyJ0AAADhNmIq7wAAUvXeXqL7qipS9X0lgdqqKkro1BDInQAABuEAAP9/qioX4MzMpHz//wCA/39azP//AIABSv21//8AgDIzpHz//wCAXAQgoVTVsMBcBCChqiqwwCYR/7+qKrrCJhH/v1TVusL/P9juqipKyt5eovtU1XfP/3///6oqVNUgoaL7VNV3z9ju/79U1brCovsgoaoqsMCi+yChVNWwwIHagdqqKvzF2O7/v6oqusLY7v+/VNW6wt5eovuqKnfP/3///6oqVNX/f///VNVU1d5eovtU1XfP/7/Y7qoqSsqB2oHaqir8xYHagdpU1fzF/7/Y7lTVSspcBCChqiqwwFwEIKFU1bDA/z/Y7qoqSsr/P9juVNVKyn0lgdpU1fzFJhH/v1TVusImEf+/qiq6wn0lgdqqKvzFfSWB2lTV/MUgoaL7qip3z/+/2O6qKkrK/7/Y7lTVSsogoaL7VNV3z6L7IKFU1bDAovsgoaoqsMA+NsKTAACwwD42wpP//7DAPGzAyf//d8//f1rMAABU1S2mIML//0rKLaYgwgAASsrCk8DJAAB3z8KTwMn//3fPIMItpgAAusIgwi2m//+6wtFZIML//0rK0VkgwgAASsoBSv21AAD8xVQcirn//1qgXAQgoVTV8Z8mEf+/VNVaoAFK/bUAAPzF3j0tpgAAusLePS2m//+6wgFK/bX///zFMjOkfP//CsAyM6R8AAAKwP9/FfP//wegNmIq7///1J/eXqL7VNXUn9QQyJ3///efzAwof///9p9cBCChVNX3n8wMKH8AAP//PjbCkwAA///ePS2mAAD//1QcirkAAP//AUr9tQAA///RWSDCAAD//54uYNEAAP///39azAAA//9g0WDRAAD//8KTwMkAAP//LaYgwgAA//+KuarjAAD//3RGquMAAP//quOKuQAA////fxXzAAD//yDCLaYAAP//wMnCkwAA//8y8yh/AAD//y2mIML//0rK/bX9tf///MX9tf21AAD8xS2mIMIAAErKXAQgoaoqBuFUHIq5AAB74yYR/7+qKnvjYNFg0f//RqCKuarj///qoP+/2O5U1eqgMvMof///9p+KuarjAACT7WDRYNEAAErogdqB2qoqSuj/v9juqiqT7Z4uYNH//8WgVByKuf//LqAmEf+/VNUuoH0lgdpU1cWgPGzAyf//d888bMDJAAB3z9FZIMIAAErK0Vkgwv//SsrY7v+/VNUuoKrjirn//y6gYNFg0f//xaCB2oHaVNXFoDLzKH8AABfgovsgoaoqAOHMzKR8AAAKwMDJwpMAALDAwMnCk///sMDMzKR8//8KwN49LaYAALrCPjbCkwAAsMA+NsKT//+wwN49Lab//7rCYNFg0QAApeeq44q5AACt44HagdqqKqXn/7/Y7lTVE6CKuarj//8ToCChovtU1Zag////f6oqCsD///9/VNUKwDZiKu///5agdEaq4///E6DeXqL7VNWWoDLzKH8AABfg////f6oqF+AAAP9/VNX2n8wMKH////afzAwofwAAF+D///9/VNX2nzLzKH////afovsgoVTV958goaL7VNXUn8idKu///9Sf/38V8///B6D/f///VNUHoP8/2O6qKgbvdEaq4wAABu/eXqL7qiq19zZiKu8AALX3/38V8wAAk/7/f///qiqT/gAA/3+qKhfgzAwofwAAF+DUEMidAAAA4VwEIKGqKgDhwpPAyf//d8/Ck8DJAAB3z/9/WswAAFTV/39azP//VNWKuarjAAAG7/+/2O6qKgbvAAD/f6oqCsAAAP9/VNUKwHRGquP//+qgni5g0f//RqB9JYHaVNVGoP8/2O5U1eqgni5g0QAASuh0RqrjAACT7f8/2O6qKpPtwMnCkwAAsMAgwi2mAAC6wiDCLab//7rCwMnCk///sMAy8yh///8AgMDJwpP//wCAIMItpv//AICq44q5//8AgC2mIML//wCAYNFg0f//AIDCk8DJ//8AgJ4uYNH//wCAPGzAyf//AICKuarj//8AgNFZIML//wCAdEaq4///AIA2Yirv//8AgP9/FfP//wCAVByKuf//AIDePS2m//8AgD42wpP//wCAzAwof///AICq44q5AAB74yrvyJ0AAAbhovsgoaoqBuHY7v+/qip74/9/FfMAAJP+yJ0q7wAAtfcgoaL7qiq19/9///+qKpP+ovsgoVTV8Z8q78id///xn6rjirn//1qg2O7/v1TVWqAmEf+/qiqt41QcirkAAK3jni5g0QAAped9JYHaqiql5/9///9Loma7/3///3/Nvyb9uf8c/38AAP9/AAD/fwAAAUb/4v9/AAD/f////3////9///9hxyyuYJYW4f9///+o4k9QysJqNT2f+RX/fwAA/38AAP9/////f////3////9/////f////38AAFSprwf/fwAAVKmvB/9/////f///AAD/fwAA/38AAP9/AAD/fwAA/38AAP9/AAD/fwAA/38AAP9/AAD/fwAA/38AAP9//3////9/////f////3////9/////f////3////9////+nADG7oMh+L+mf7LugyH4VNWqKqisVBbdh+4D3YfuAxB83QcAY/45EHzdBz9Zf01UVVRVAUb/4iF4EPwheBD8ooad9pvuEYVgiaMG/3////9/////f////3////9/////f////3///wuELgEqmTgGso5cBK+Hqdavh6nWfoaR3wCEffEugfL7/3////9/////f////3///1aNUeVWjVHlVJZV01SWVdNLoma7v6Z/slTVqip/zb8mqKxUFq2aVg2tmlYN/bn/HKisVBaorFQWv6Z/sqqqqqqqqqqqv6Z/spfETCL9uf8c/bn/HJfETCJWjVHlVo1R5UuiZrtLoma7/pwAxlSWVdNUllXT/pwAxv6cAMZ/zb8ml8RMIpfETCJ/zb8mrZpWDa2aVg2ocq0aqHKtGj9Zf01UVVRVZzuy3Wc7st1/Mj/ZfzI/2VZTqulWU6rps12YRLNdmEQAY/45w6QezGCWFuHDpB7MAGP+OappqSyqaaksAGP+ORB83QcQfN0Hm+4Rha3iTJut4kyb+ZXA4KKGnfb5lcDg/3////9/////f////3////9/////f////3////9/////f////3////9/////f////3////9/////f////3////9/////f///Zzuy3QFG/+IBRv/iZzuy3QCEffGIhx/miIcf5srCajVu0o0+btKNPmCJowYrp3IJbKB+BmygfgYrp3IJRrEcvG2m88xtpvPMRrEcvD9Zf00/WX9Ns12YRLNdmEQLs24mC7NuJuLDRzHiw0cxC4QuAbKOXAQheBD8UWWo8lFlqPIheBD8qmmpLKhyrRqocq0aqmmpLPihTwkqmTgG+KFPCdLRYUfS0WFHqOJPUN2H7gPdh+4DT9BWnWHHLK5P0FadC4QuAQuELgGihp32ooad9i6B8vtgiaMGYImjBj2f+RWx5K1iseStYuz6m27s+ptuo4Sj26OEo9u8gBrbvIAa2waE0NcGhNDXLoHy+y6B8vtbhEzxW4RM8X8yP9l/Mj/ZqipU1aoqVNVbpKMEW6SjBO6DIfjugyH4jL6QrWm1M71ptTO9jL6QrX6Gkd9yidLYconS2FFlqPJWU6rpVlOq6VFlqPL/f////3////9/////f////3////9/////f////3////9/////f////3////9/////f////3////9/////f////3////9////emYkHgI4ABICOAATemYkHLagGBOOkvQDjpL0ALagGBOieYRbonmEW37PDJN+zwyQ3htPmN4bT5k+JBd5PiQXe")
}]
blend_shape_mode = 0
shadow_mesh = SubResource("ArrayMesh_y65rj")

[sub_resource type="GDScript" id="GDScript_id7lw"]
resource_name = "MusicBox"
script/source = "extends Node3D

@onready var animation_player : AnimationPlayer = $AnimationPlayer

func _ready() -> void:
  animation_player.play('HandleAction')
"

[sub_resource type="AudioStreamRandomizer" id="AudioStreamRandomizer_d7ucg"]
streams_count = 6
stream_1/stream = ExtResource("8_hqard")
stream_2/stream = ExtResource("9_xph1r")
stream_3/stream = ExtResource("10_37ht0")
stream_4/stream = ExtResource("11_fd5wo")
stream_5/stream = ExtResource("12_dp1ol")

[sub_resource type="AudioStreamRandomizer" id="AudioStreamRandomizer_af32p"]
streams_count = 5
stream_0/stream = ExtResource("13_1hcgq")
stream_1/stream = ExtResource("14_3n1r2")
stream_2/stream = ExtResource("15_kpbos")
stream_3/stream = ExtResource("16_6g7x3")
stream_4/stream = ExtResource("17_6a77l")

[sub_resource type="GDScript" id="GDScript_01i28"]
script/source = "extends Node

@onready var baby1 : Baby = $'../Baby1'
@onready var baby2 : Baby = $'../Baby2'

func _ready() -> void:
  # Reset baby positions based on calibrated player height.

  # Assumptions: Player's arm span = player's height (according to Leonardo's
  # Vitruvian Man). So place the babies a player height width apart.
  # (Don't subtract on this one, you can stretch.)
  var baby_dist_from_origin := Globals.calibrated_player_height / 2.0
  # Don't make them closer than easy_locks.
  baby_dist_from_origin = max(baby_dist_from_origin, 0.3)

  #print('babies are %.1fm away' % [baby_dist_from_origin])

  set_baby_distance(baby1, baby_dist_from_origin)
  set_baby_distance(baby2, baby_dist_from_origin)

func set_baby_distance(baby: Node3D, dist: float) -> void:
  # Scale the XZ vector.
  var baby_xz : Vector2 = Vector2(baby.position.x, baby.position.z)
  baby_xz = baby_xz.normalized() * dist
  baby.position = Vector3(baby_xz.x, baby.position.y, baby_xz.y)
"

[node name="Level" node_paths=PackedStringArray("left_hand", "right_hand", "activator1", "activator2") instance=ExtResource("1_t0qa0")]
left_hand = NodePath("BottleLeft")
right_hand = NodePath("BottleRight")
activator1 = NodePath("Baby1")
activator2 = NodePath("Baby2")

[node name="Sun" parent="." index="0"]
directional_shadow_split_1 = 0.116

[node name="BottleLeft" parent="." index="4" instance=ExtResource("2_t0qa0")]

[node name="BottleRight" parent="." index="5" instance=ExtResource("2_t0qa0")]

[node name="Static" type="Node3D" parent="." index="6"]

[node name="Ground" type="CSGBox3D" parent="Static" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.5, 0)
use_collision = true
collision_layer = 2
collision_mask = 0
size = Vector3(11, 1, 11)

[node name="Roof" type="CSGBox3D" parent="Static" index="1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 3.5, 0)
use_collision = true
collision_layer = 2
collision_mask = 0
size = Vector3(10, 1, 10)

[node name="FrontWall" type="CSGBox3D" parent="Static" index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.5, -5)
use_collision = true
collision_layer = 2
collision_mask = 0
size = Vector3(10, 3, 0.5)

[node name="DoorShapeOuter" type="CSGMesh3D" parent="Static/FrontWall" index="0"]
transform = Transform3D(2.322, 0, 0, 0, 2.322, 0, 0, 0, 5.092489, 0, -1, -0.0007109642)
operation = 2
mesh = SubResource("ArrayMesh_t0qa0")

[node name="DoorInner" type="CSGBox3D" parent="Static/FrontWall" index="1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.078, 0)
operation = 2
size = Vector3(1.5878296, 2.0021973, 1)

[node name="LeftWall" type="CSGBox3D" parent="Static" index="3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -5, 1.5, 0)
use_collision = true
collision_layer = 2
collision_mask = 0
size = Vector3(0.5, 3, 10)

[node name="Window" type="CSGBox3D" parent="Static/LeftWall" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.25, 0)
operation = 2
size = Vector3(1, 1, 3)

[node name="RightWall" type="CSGBox3D" parent="Static" index="4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5, 1.5, 0)
use_collision = true
collision_layer = 2
collision_mask = 0
size = Vector3(0.5, 3, 10)

[node name="Window" type="CSGBox3D" parent="Static/RightWall" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.25, 0)
operation = 2
size = Vector3(1, 1, 3)

[node name="BackWall" type="CSGBox3D" parent="Static" index="5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.5, 5)
use_collision = true
collision_layer = 2
collision_mask = 0
size = Vector3(10, 3, 0.5)

[node name="Window" type="CSGBox3D" parent="Static/BackWall" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.25, 0)
operation = 2
size = Vector3(3, 1, 1)

[node name="Cot1" parent="Static" index="6" instance=ExtResource("3_jjwbj")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3, 0, 0)

[node name="Cot2" parent="Static" index="7" instance=ExtResource("3_jjwbj")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3, 0, 0)

[node name="Table" type="CSGCombiner3D" parent="Static" index="8"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1)

[node name="Top" type="CSGBox3D" parent="Static/Table" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.67202747, 0)
size = Vector3(0.5, 0.1, 0.5)

[node name="Leg" type="CSGBox3D" parent="Static/Table" index="1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.31170654, 0)
size = Vector3(0.1, 0.6234131, 0.1)

[node name="Foot" type="CSGBox3D" parent="Static/Table" index="2"]
size = Vector3(0.2, 0.05, 0.2)

[node name="Coaster" type="CSGBox3D" parent="Static/Table" index="3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.73248494, 0)
size = Vector3(0.15, 0.02, 0.15)

[node name="CalibrateInstruction" type="CSGBox3D" parent="Static" index="9"]
transform = Transform3D(-1.844796, 0, -1.6127719e-07, 0, 1.8447962, 0, 1.6127719e-07, 0, -1.844796, 0, 0.6458975, 4.7128334)
size = Vector3(0.5, 0.5, 0.1)

[node name="Instruction" type="Sprite3D" parent="Static/CalibrateInstruction" index="0"]
transform = Transform3D(0.048431065, 0, -1.8626451e-09, 0, 0.048431017, 0, 1.8626451e-09, 0, 0.048431065, 0.0028364956, 0, 0.060531974)
texture = ExtResource("4_nnyux")

[node name="MusicBox" parent="." index="7" instance=ExtResource("4_4bgyd")]
transform = Transform3D(-0.05158788, 0, -4.509956e-09, 0, 0.05158788, 0, 4.509956e-09, 0, -0.05158788, -0.014414601, 0.74202746, 1.032)
script = SubResource("GDScript_id7lw")

[node name="AudioStreamPlayer3D" type="AudioStreamPlayer3D" parent="MusicBox" index="6"]
stream = ExtResource("5_id7lw")
autoplay = true

[node name="Baby1" parent="." index="8" instance=ExtResource("4_t0qa0")]
transform = Transform3D(0.44568214, -4.760239e-09, 0.8951913, 1.8888293e-09, 1, 4.3771893e-09, -0.8951913, -2.599722e-10, 0.44568214, -0.59302896, 0.00525913, -0.5825793)
crying_sound = SubResource("AudioStreamRandomizer_d7ucg")

[node name="Baby2" parent="." index="9" instance=ExtResource("4_t0qa0")]
transform = Transform3D(-0.07134068, 1.5683028e-08, -0.997452, 3.0810536e-08, 1, 1.3519431e-08, 0.997452, -2.9767548e-08, -0.07134068, 0.9225017, 0.00525913, 0.0849579)
crying_sound = SubResource("AudioStreamRandomizer_af32p")

[node name="Door" parent="." index="10" instance=ExtResource("4_id7lw")]
transform = Transform3D(2.807497, 0, 0, 0, 2.807497, 0, 0, 0, 2.807497, 0, 0, -4.7449336)

[node name="SecondaryLight" type="OmniLight3D" parent="." index="11"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.228, 0)
light_color = Color(1, 0.94133335, 0.68, 1)
light_energy = 0.3
shadow_enabled = true
omni_range = 3.866

[node name="CustomSetup" parent="." index="12"]
script = SubResource("GDScript_01i28")
